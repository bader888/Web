ASP.NET Core Web API is a framework for building web APIs on top of the .NET Core platform. 
In this context, “Models” are classes that represent the data that the application will handle.
These models define the shape of data for requests and responses.

[1] - Data Annotations for Validation: 
Data annotations can be used to define validation rules directly in the model.
Common Data Annotation Attributes include [Required], [StringLength], [Range], and more. 
These Data Annotation Attributes help ensure that the data received by the API meets the specified criteria before the controller actions process it.
example: 
 public class User
    {
        public int Id { get; set; }
        [Required]
        [StringLength(100)]
        public string FirstName { get; set; }
        [Required]
        [StringLength(100)]
        public string LastName { get; set; }
        [EmailAddress]
        public string Email { get; set; }
    }

[2] - Model with Enumerations
public class Employee
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public Department Department { get; set; }
    }
    
    public enum Department
    {
        HR, IT, Finance, Marketing
    }

[3] - Model with Fluent Validation
Fluent Validation is a popular library for building strongly typed validation rules. 

[4] - Using Models in Controller:
...
 // GET: api/products
        [HttpGet]
        public ActionResult<IEnumerable<Product>> GetProducts()
        {
            return _products;
        }
...


